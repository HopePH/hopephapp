// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.0.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Yol.Punla.UnitTest.WebAPI.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PostFeedService")]
    public partial class PostFeedServiceFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "PostFeedService.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PostFeedService", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET method in getting top post feed")]
        public virtual void CallingTheHttpGETMethodInGettingTopPostFeed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET method in getting top post feed", ((string[])(null)));
#line 3
this.ScenarioSetup(scenarioInfo);
#line 4
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
  testRunner.And("the post feed list is null", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 6
 testRunner.When("the client calls to the GetTopPosts endpoint for company \"HopePH\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 7
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 8
  testRunner.And("I should that there are more or less 100 post the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
  testRunner.And("I should see that the post has a displayed a contact gender", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET method in getting comments of a specific post feed")]
        public virtual void CallingTheHttpGETMethodInGettingCommentsOfASpecificPostFeed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET method in getting comments of a specific post feed", ((string[])(null)));
#line 11
this.ScenarioSetup(scenarioInfo);
#line 12
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.When("the client calls to the GetComments endpoint for post id \"1\" company \"HopePH\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http POST method for adding or updating post feed")]
        [NUnit.Framework.TestCaseAttribute("512", "HopePH", "New Post from @worde", "", "Welcome to depression and anxiety support group! You could now post what you are " +
            "going into right now anonymously without sacrificing your privacy. Edited", "1934", "Welcome to depression and anxiety support group! You could now post what you are " +
            "going into right now anonymously without sacrificing your privacy.", null)]
        public virtual void CallingTheHttpPOSTMethodForAddingOrUpdatingPostFeed(string postId, string company, string title, string contentURL, string contentText, string contactId, string contentTextOld, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http POST method for adding or updating post feed", exampleTags);
#line 16
this.ScenarioSetup(scenarioInfo);
#line 17
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.When(string.Format("the client calls to the GetTopPosts endpoint and get the first item for company \"" +
                        "HopePH\" and get the post feed \"{0}\"", contentTextOld), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then(string.Format("I should see one of the item content is \"{0}\"", contentTextOld), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 20
 testRunner.When(string.Format("the client calls to the AddNewPostFeed endpoint for post id \"{0}\", company \"{1}\"," +
                        " title \"{2}\", content url \"{3}\", content text \"{4}\", contact id \"{5}\"", postId, company, title, contentURL, contentText, contactId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
  testRunner.And(string.Format("I should see that the new post feed content \"{0}\"", contentText), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When(string.Format("the client calls to the AddNewPostFeed endpoint for post id \"{0}\", company \"{1}\"," +
                        " title \"New Post from @HaiyanRbf\", content url \"{2}\", content text \"{3}\", contac" +
                        "t id \"{4}\"", postId, company, contentURL, contentTextOld, contactId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
  testRunner.And(string.Format("I should see that the new post feed content \"{0}\"", contentTextOld), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET and POST method in adding, deleting and getting likes")]
        [NUnit.Framework.TestCaseAttribute("1", "1", "2", "1893", null)]
        public virtual void CallingTheHttpGETAndPOSTMethodInAddingDeletingAndGettingLikes(string postId, string beforeLikesCount, string afterLikesCount, string posterId, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET and POST method in adding, deleting and getting likes", exampleTags);
#line 31
this.ScenarioSetup(scenarioInfo);
#line 32
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 33
 testRunner.When(string.Format("the client calls to the GetPostFeedLike endpoint for post id \"{0}\" company \"HopeP" +
                        "H\"", postId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 35
  testRunner.And(string.Format("I should see that there are \"{0}\" likes", beforeLikesCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.When(string.Format("I hit one like to the post feed id \"{0}\" of poster id \"{1}\"", postId, posterId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 38
  testRunner.And(string.Format("I should see that there are \"{0}\" likes", afterLikesCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.When(string.Format("I remove one like to the post feed id \"{0}\" of poster id \"{1}\"", postId, posterId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
  testRunner.And(string.Format("I should see that there are \"{0}\" likes", beforeLikesCount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET method in getting own post feed")]
        public virtual void CallingTheHttpGETMethodInGettingOwnPostFeed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET method in getting own post feed", ((string[])(null)));
#line 47
this.ScenarioSetup(scenarioInfo);
#line 48
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.When("the client calls to the GetOwnPosts endpoint for company \"HopePH\" and poster id \"" +
                    "1934\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
  testRunner.And("I should see that all posts are from poster id \"1934\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET method of getting post feed in quick and by batch")]
        [NUnit.Framework.TestCaseAttribute("1934", "HopePH", "0", "20", null)]
        public virtual void CallingTheHttpGETMethodOfGettingPostFeedInQuickAndByBatch(string contactId, string company, string basePostId, string noOfPosts, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET method of getting post feed in quick and by batch", exampleTags);
#line 53
this.ScenarioSetup(scenarioInfo);
#line 54
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 55
  testRunner.And("the post feed list is null", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
 testRunner.When(string.Format("the client calls to the GetTopPostsWithSpeed endpoint for company \"{0}\", contact " +
                        "\"{1}\" and starting post \"{2}\" for the first time", company, contactId, basePostId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 58
  testRunner.And(string.Format("I should that there are \"{0}\" post fetch from the server", noOfPosts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When(string.Format("the client calls again to fetch the next batch to the GetTopPostsWithSpeed endpoi" +
                        "nt for company \"{0}\", contact \"{1}\" and starting post \"{2}\"", company, contactId, basePostId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.Then(string.Format("I should that there are \"{0}\" post fetch from the server of the next batch", noOfPosts), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Calling the Http GET method of getting notifications from the server")]
        [NUnit.Framework.TestCaseAttribute("1934", "HopePH", null)]
        public virtual void CallingTheHttpGETMethodOfGettingNotificationsFromTheServer(string contactId, string company, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calling the Http GET method of getting notifications from the server", exampleTags);
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
 testRunner.Given("the api client is authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
  testRunner.And("the post feed list is null", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.When(string.Format("the client calls to the GetPostNotifications endpoint for company \"{0}\" and conta" +
                        "ct \"{1}\"", company, contactId), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("I should see the response code is OK", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 71
  testRunner.And("I should that there post notifications fetch from the server", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
