// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.3.2.0
//      SpecFlow Generator Version:2.3.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Yol.Punla.UnitTest.Tests
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.3.2.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class EmailVerificationPageFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
#line 1 "EmailVerificationPage.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "EmailVerificationPage", "\tThis is another alternative in signing up to the app.\r\n\tThis will require the us" +
                    "er to enter email and confirm\r\n\tthe verification code sent to their email.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "EmailVerificationPage")))
            {
                global::Yol.Punla.UnitTest.Tests.EmailVerificationPageFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(TestContext);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
 testRunner.Given("I am not authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
  testRunner.And("I am on the page \"WikiPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
  testRunner.And("the menu detail is closed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
 testRunner.When("I tap the hamburger icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I should see the menu detail is opened", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 12
 testRunner.When("I tap the Write Down icon from the menu detail with authenticated \"false\" and sig" +
                    "ned up \"false\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I should see a message saying the user to sign up \"When logging in your profile w" +
                    "ill still remain anonymous to the other users.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 14
  testRunner.And("I am redirected to the page \"LogonPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.When("I tap the Sign up link text", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I am redirected to the page \"SignUpPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 17
 testRunner.When("I tap the Verify Email Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.Then("I am redirected to the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
        }
        
        public virtual void SigningUpViaEmailVerificationAndEnteringValidEmailAndRequestingVerificationCode(string email, string typedVerificationCode, string fullname, string defaultPicture, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification and entering valid email and requesting verific" +
                    "ation code", exampleTags);
#line 20
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 21
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 22
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I should get a verification code sent to my email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.When(string.Format("I type the verification code \"{0}\" and tap the submit button using the email \"{1}" +
                        "\" provided", typedVerificationCode, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.Then("I am redirected to the page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
  testRunner.And(string.Format("I could see the Fullname \"{0}\"", fullname), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
  testRunner.And(string.Format("I could see the email \"{0}\"", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
  testRunner.And(string.Format("I could see my default avatar picture \"{0}\"", defaultPicture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification and entering valid email and requesting verific" +
            "ation code: momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:typedVerificationCode", "1111")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:fullname", "Undisclosed Name")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:defaultPicture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/manavatar.png")]
        public virtual void SigningUpViaEmailVerificationAndEnteringValidEmailAndRequestingVerificationCode_MomoyGmail_Com()
        {
#line 20
this.SigningUpViaEmailVerificationAndEnteringValidEmailAndRequestingVerificationCode("momoy@gmail.com", "1111", "Undisclosed Name", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/manavatar.png", ((string[])(null)));
#line hidden
        }
        
        public virtual void SigningUpViaEmailVerificationButEnteringIncorrectVerificationCode(string errorMsg, string email, string typedVerificationCode, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification but entering incorrect verification code", exampleTags);
#line 35
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 36
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.Then("I should get a verification code sent to my email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 40
 testRunner.When(string.Format("I type the verification code \"{0}\" and tap the submit button using the email \"{1}" +
                        "\" provided", typedVerificationCode, email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.Then(string.Format("I should see an error message \"{0}\"", errorMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification but entering incorrect verification code: Pleas" +
            "e enter a valid verification code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "Please enter a valid verification code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errorMsg", "Please enter a valid verification code")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:typedVerificationCode", "1112")]
        public virtual void SigningUpViaEmailVerificationButEnteringIncorrectVerificationCode_PleaseEnterAValidVerificationCode()
        {
#line 35
this.SigningUpViaEmailVerificationButEnteringIncorrectVerificationCode("Please enter a valid verification code", "momoy@gmail.com", "1112", ((string[])(null)));
#line hidden
        }
        
        public virtual void SigningUpViaEmailVerificationButUsingAnEmailThatExistsAlready(string errorMsg, string email, string typedVerificationCode, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification but using an email that exists already", exampleTags);
#line 47
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 48
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.Then(string.Format("I should see an error message \"{0}\"", errorMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification but using an email that exists already: The ema" +
            "il already exists.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "The email already exists.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:errorMsg", "The email already exists.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "hynrbf@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:typedVerificationCode", "1112")]
        public virtual void SigningUpViaEmailVerificationButUsingAnEmailThatExistsAlready_TheEmailAlreadyExists_()
        {
#line 47
this.SigningUpViaEmailVerificationButUsingAnEmailThatExistsAlready("The email already exists.", "hynrbf@gmail.com", "1112", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Submitting request for verification code when there is no email supplied")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        public virtual void SubmittingRequestForVerificationCodeWhenThereIsNoEmailSupplied()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Submitting request for verification code when there is no email supplied", ((string[])(null)));
#line 57
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 58
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.When("I tap send verification code button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
 testRunner.Then("I should see an error message \"Please enter a valid email address.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        public virtual void SigningUpViaEmailVerificationButWithoutAliasName(string email, string alias, string mobilePhone, string defaultPicture, string fullName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification but without alias name", exampleTags);
#line 63
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 64
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 65
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.Then("I should get a verification code sent to my email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 68
 testRunner.When(string.Format("I type the verification code \"1111\" and tap the submit button using the email \"{0" +
                        "}\" provided", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.Then("I am redirected to the page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 70
  testRunner.And(string.Format("I could see the Fullname \"{0}\"", fullName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
  testRunner.And(string.Format("I could see the email \"{0}\"", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
  testRunner.And(string.Format("I could see my default avatar picture \"{0}\"", defaultPicture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When(string.Format("I enter email address \"{0}\", alias \"{1}\", and mobile no \"{2}\" I tap the Save and " +
                        "Continue button", email, alias, mobilePhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("I should stay on the same page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 75
  testRunner.And("I should see registration error message \"Please enter your alias.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification but without alias name: momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:alias", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:mobilePhone", "026500987")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:defaultPicture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/manavatar.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:fullName", "Undisclosed Name")]
        public virtual void SigningUpViaEmailVerificationButWithoutAliasName_MomoyGmail_Com()
        {
#line 63
this.SigningUpViaEmailVerificationButWithoutAliasName("momoy@gmail.com", "", "026500987", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/manavatar.png", "Undisclosed Name", ((string[])(null)));
#line hidden
        }
        
        public virtual void SigningUpViaEmailVerificationAndCompletingTheSignupProcess(string email, string alias, string mobilePhone, string picture, string defaultPicture, string fullName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification and completing the signup process", exampleTags);
#line 81
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 82
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.Then("I should get a verification code sent to my email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
 testRunner.When(string.Format("I type the verification code \"1111\" and tap the submit button using the email \"{0" +
                        "}\" provided", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.Then("I am redirected to the page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
  testRunner.And(string.Format("I could see the Fullname \"{0}\"", fullName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
  testRunner.And(string.Format("I could see the email \"{0}\"", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
  testRunner.And(string.Format("I could see my default avatar picture \"{0}\"", defaultPicture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.When("I tap the Change Photo button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
 testRunner.Then("I should see the list of avatar images to choose from", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
 testRunner.When(string.Format("I tap on the avatar image \"{0}\" that I choose", picture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.Then(string.Format("I should see that my default picture was changed to \"{0}\"", picture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 95
 testRunner.When(string.Format("I enter email address \"{0}\", alias \"{1}\", and mobile no \"{2}\" I tap the Save and " +
                        "Continue button", email, alias, mobilePhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 96
 testRunner.Then("I am authenticated", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 97
  testRunner.And("I am redirected to the page \"PostFeedPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification and completing the signup process: momoy@gmail." +
            "com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:alias", "Pitts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:mobilePhone", "026500987")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:picture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/rabbit.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:defaultPicture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/manavatar.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:fullName", "Undisclosed Name")]
        public virtual void SigningUpViaEmailVerificationAndCompletingTheSignupProcess_MomoyGmail_Com()
        {
#line 81
this.SigningUpViaEmailVerificationAndCompletingTheSignupProcess("momoy@gmail.com", "Pitts", "026500987", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/rabbit.png", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/manavatar.png", "Undisclosed Name", ((string[])(null)));
#line hidden
        }
        
        public virtual void SigningUpViaEmailVerificationButWithoutMobilePhone(string email, string alias, string mobilePhone, string picture, string defaultPicture, string fullName, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Signing up via email verification but without mobile phone", exampleTags);
#line 103
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line 104
 testRunner.Given("I am on the page \"EmailVerificationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 105
  testRunner.And("I could see the Email and verification code entries are empty", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.When(string.Format("I type the email \"{0}\" and tap send verification code button", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.Then("I should get a verification code sent to my email", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 108
 testRunner.When(string.Format("I type the verification code \"1111\" and tap the submit button using the email \"{0" +
                        "}\" provided", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.Then("I am redirected to the page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 110
  testRunner.And(string.Format("I could see the Fullname \"{0}\"", fullName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
  testRunner.And(string.Format("I could see the email \"{0}\"", email), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
  testRunner.And(string.Format("I could see my default avatar picture \"{0}\"", defaultPicture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
 testRunner.When("I tap the Change Photo button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.Then("I should see the list of avatar images to choose from", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 115
 testRunner.When(string.Format("I tap on the avatar image \"{0}\" that I choose", picture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
 testRunner.Then(string.Format("I should see that my default picture was changed to \"{0}\"", picture), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 117
 testRunner.When(string.Format("I enter email address \"{0}\", alias \"{1}\", and mobile no \"{2}\" I tap the Save and " +
                        "Continue button", email, alias, mobilePhone), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.Then("I should stay on the same page \"AccountRegistrationPage\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 119
  testRunner.And("I should see registration error message \"Please enter your mobile no.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Signing up via email verification but without mobile phone: momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "EmailVerificationPage")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:email", "momoy@gmail.com")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:alias", "Pitts")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:mobilePhone", "")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:picture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/rabbit.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:defaultPicture", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
            "/manavatar.png")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:fullName", "Undisclosed Name")]
        public virtual void SigningUpViaEmailVerificationButWithoutMobilePhone_MomoyGmail_Com()
        {
#line 103
this.SigningUpViaEmailVerificationButWithoutMobilePhone("momoy@gmail.com", "Pitts", "", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/rabbit.png", "https://yolpunlastorage.blob.core.windows.net/yolpunlacontainer/RBF/Contact.Photo" +
                    "/manavatar.png", "Undisclosed Name", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
